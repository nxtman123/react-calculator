{"version":3,"sources":["components/Display.js","components/Keypad.js","App.js","serviceWorker.js","index.js","utils/expressions.js"],"names":["Display","prevLine","undefined","_this","props","result","textExpression","ans","userExpression","length","join","mainLine","isNaN","implParens","openParens","repeat","react_default","a","createElement","Paper_default","className","Typography_default","this","variant","Component","Keypad","react","Button_default","classes","label","onClick","typeKey","backKey","Icon_default","fontSize","color","clearKey","equalKey","App","state","setState","Object","toConsumableArray","value","pop","lastToken","indexOf","Number","isInteger","i","push","resolveExpression","components_Display","components_Keypad","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","__webpack_require__","d","__webpack_exports__","condenseFloats","translateSymbols","implicitMultiplication","eval","NaN","error","num","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","token","parseFloat","err","return"],"mappings":"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","file":"static/js/main.5ab71814.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport \"../App.css\";\n\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\n\nclass Display extends Component {\n    render() {\n        return (\n            <Paper className=\"calc-display\">\n                <Typography className=\"display-prev-line\">\n                    {this.prevLine()}\n                </Typography>\n                <Typography variant=\"h3\" className=\"display-main-line\">\n                    {this.mainLine()}\n                    <span className=\"implied-parens\">{this.implParens()}</span>\n                </Typography>\n            </Paper>\n        );\n    }\n\n    prevLine = () => {\n        if (this.props.result !== undefined) {\n            return this.textExpression() + \" =\";\n        } else {\n            return \"Ans = \" + this.props.ans;\n        }\n    }\n\n    textExpression = () => {\n        if (this.props.userExpression.length === 0) {\n            return \"0\";\n        }\n        return this.props.userExpression.join(\"\");\n    }\n\n    mainLine = () => {\n        if (this.props.result !== undefined) {\n            if (isNaN(this.props.result)) {\n                return \"Error\";\n            }\n            return this.props.result;\n        } else {\n            return this.textExpression();\n        }\n    }\n\n    implParens = () => {\n        if (this.props.result === undefined && this.props.openParens) {\n            return \" \" + \")\".repeat(this.props.openParens);\n        }\n    }\n}\n\nexport default Display;\n","import React, { Fragment } from 'react';\n\nimport \"../App.css\";\n\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\n\nconst Keypad = (props) => (\n    <Fragment>\n        <Button\n            variant=\"contained\"\n            classes={{ label: \"calc-key-text\" }}\n            className=\"calc-ans-key calc-key-medium\"\n            onClick={props.typeKey(\"Ans\")}\n        >\n            Ans\n        </Button>\n        <Button\n            variant=\"contained\"\n            classes={{ label: \"calc-key-text\" }}\n            className=\"calc-back-key calc-key-dark\"\n            onClick={props.backKey}\n        >\n            <Icon fontSize=\"inherit\">backspace</Icon>\n        </Button>\n        <Button\n            variant=\"contained\"\n            color=\"primary\"\n            classes={{ label: \"calc-key-text\" }}\n            className=\"calc-clear-key\"\n            onClick={props.clearKey}\n        >\n            Clear\n        </Button>\n        <Button\n            variant=\"contained\"\n            classes={{ label: \"calc-key-paren\" }}\n            className=\"calc-left-paren-key calc-key-medium\"\n            onClick={props.typeKey(\"(\")}\n        >\n            (\n        </Button>\n        <Button\n            variant=\"contained\"\n            classes={{ label: \"calc-key-paren\" }}\n            className=\"calc-right-paren-key calc-key-medium\"\n            onClick={props.typeKey(\")\")}\n        >\n            )\n        </Button>\n        <Button\n            variant=\"contained\"\n            classes={{ label: \"calc-key-symbol\" }}\n            className=\"calc-div-key calc-key-medium\"\n            onClick={props.typeKey(\" ÷ \")}\n        >\n            ÷\n        </Button>\n        <Button\n            variant=\"contained\"\n            classes={{ label: \"calc-key-symbol\" }}\n            className=\"calc-mult-key calc-key-medium\"\n            onClick={props.typeKey(\" × \")}\n        >\n            ×\n        </Button>\n        <Button\n            variant=\"contained\"\n            classes={{ label: \"calc-key-symbol\" }}\n            className=\"calc-sub-key calc-key-medium\"\n            onClick={props.typeKey(\" − \")}\n        >\n            −\n        </Button>\n        <Button\n            variant=\"contained\"\n            classes={{ label: \"calc-key-symbol\" }}\n            className=\"calc-add-key calc-key-medium\"\n            onClick={props.typeKey(\" + \")}\n        >\n            +\n        </Button>\n        <div className=\"calc-numpad\">\n            <Button\n                variant=\"contained\"\n                classes={{ label: \"calc-key-text\" }}\n                className=\"calc-7-key calc-key-light\"\n                onClick={props.typeKey(7)}\n            >\n                7\n            </Button>\n            <Button\n                variant=\"contained\"\n                classes={{ label: \"calc-key-text\" }}\n                className=\"calc-8-key calc-key-light\"\n                onClick={props.typeKey(8)}\n            >\n                8\n            </Button>\n            <Button\n                variant=\"contained\"\n                classes={{ label: \"calc-key-text\" }}\n                className=\"calc-9-key calc-key-light\"\n                onClick={props.typeKey(9)}\n            >\n                9\n            </Button>\n            <Button\n                variant=\"contained\"\n                classes={{ label: \"calc-key-text\" }}\n                className=\"calc-4-key calc-key-light\"\n                onClick={props.typeKey(4)}\n            >\n                4\n            </Button>\n            <Button\n                variant=\"contained\"\n                classes={{ label: \"calc-key-text\" }}\n                className=\"calc-5-key calc-key-light\"\n                onClick={props.typeKey(5)}\n            >\n                5\n            </Button>\n            <Button\n                variant=\"contained\"\n                classes={{ label: \"calc-key-text\" }}\n                className=\"calc-6-key calc-key-light\"\n                onClick={props.typeKey(6)}\n            >\n                6\n            </Button>\n            <Button\n                variant=\"contained\"\n                classes={{ label: \"calc-key-text\" }}\n                className=\"calc-1-key calc-key-light\"\n                onClick={props.typeKey(1)}\n            >\n                1\n            </Button>\n            <Button\n                variant=\"contained\"\n                classes={{ label: \"calc-key-text\" }}\n                className=\"calc-2-key calc-key-light\"\n                onClick={props.typeKey(2)}\n            >\n                2\n            </Button>\n            <Button\n                variant=\"contained\"\n                classes={{ label: \"calc-key-text\" }}\n                className=\"calc-3-key calc-key-light\"\n                onClick={props.typeKey(3)}\n            >\n                3\n            </Button>\n            <Button\n                variant=\"contained\"\n                classes={{ label: \"calc-key-text\" }}\n                className=\"calc-0-key calc-key-light\"\n                onClick={props.typeKey(0)}\n            >\n                0\n            </Button>\n            <Button\n                variant=\"contained\"\n                classes={{ label: \"calc-key-text\" }}\n                className=\"calc-period-key calc-key-light\"\n                onClick={props.typeKey(\".\")}\n            >\n                .\n            </Button>\n        </div>\n        <Button\n            variant=\"contained\"\n            color=\"primary\"\n            classes={{ label: \"calc-key-symbol\" }}\n            className=\"calc-equal-key\"\n            onClick={props.equalKey}\n        >\n            =\n        </Button>\n    </Fragment>\n);\n\nexport default Keypad;\n","import React, { Component } from 'react';\n\nimport \"./App.css\";\n\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Display from \"./components/Display.js\";\nimport Keypad from \"./components/Keypad.js\";\n\nimport {resolveExpression} from \"./utils/expressions.js\";\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"calc-frame\">\n                <Paper className=\"calc-paper\">\n                    <div className=\"calc-label\">\n                        <span>Calculator <span>by Kurtis Jantzen</span></span>\n                    </div>\n                    <Display {...this.state} />\n                    <Keypad\n                        clearKey={this.clearKey}\n                        backKey={this.backKey}\n                        typeKey={this.typeKey}\n                        equalKey={this.equalKey}\n                    />\n                </Paper>\n            </div>\n        );\n    }\n\n    state = {\n        result: undefined,\n        userExpression: [],\n        openParens: 0,\n        ans: 0\n    }\n\n    clearKey = () => {\n        this.setState({\n            result: undefined,\n            userExpression: [],\n            openParens: 0\n        });\n    }\n\n    backKey = () => {\n        if (this.state.result !== undefined) {\n            this.clearKey();\n            return;\n        }\n        let userExpression = [...this.state.userExpression];\n        let openParens = this.state.openParens;\n        let value = userExpression.pop();\n        if (value === \")\") {\n            openParens += 1;\n        } else if (value === \"(\") {\n            openParens -= 1;\n        }\n        this.setState({\n            userExpression,\n            openParens\n        });\n    }\n\n    typeKey = (value) => () => {\n        let userExpression = [...this.state.userExpression];\n        let openParens = this.state.openParens;\n        let lastToken = userExpression[userExpression.length - 1];\n        if (this.state.result !== undefined) {\n            if ([\" + \", \" − \", \" × \", \" ÷ \"].indexOf(value) !== -1) {\n                userExpression = [this.state.ans];\n            } else {\n                userExpression = [];\n            }\n        }\n        if ([\" + \", \" × \", \" ÷ \"].indexOf(value) !== -1) {\n            if (userExpression.length === 0) {\n                userExpression = [0];\n            } else if([\"(\", \" + \", \" − \", \" × \", \" ÷ \"].indexOf(lastToken) !== -1) {\n                return;\n            }\n        } else if (value === \" − \") {\n            if ([\" + \", \" − \", \" × \", \" ÷ \"].indexOf(lastToken) !== -1) {\n                return;\n            }\n        } else if (value === \")\") {\n            if (openParens <= 0 || [\"(\", \" + \", \" − \", \" × \", \" ÷ \"].indexOf(lastToken) !== -1) {\n                return;\n            }\n            openParens -= 1;\n        } else if (value === \"(\") {\n            openParens += 1;\n        } else if (value === \".\") {\n            if (lastToken === \".\") {\n                return;\n            } else if (Number.isInteger(lastToken)) {\n                let i = 2;\n                while (Number.isInteger(userExpression[userExpression.length - i])) {\n                    i += 1;\n                }\n                if (userExpression[userExpression.length - i] === \".\") {\n                    return;\n                }\n            }\n        }\n        userExpression.push(value);\n        this.setState({\n            result: undefined,\n            userExpression,\n            openParens\n        });\n    }\n\n    equalKey = () => {\n        let userExpression = [...this.state.userExpression];\n        let openParens = this.state.openParens;\n        let ans = this.state.ans;\n        while (openParens > 0) {\n            userExpression.push(\")\");\n            openParens -= 1;\n        }\n        let result = resolveExpression(userExpression, this.state.ans);\n        if (!isNaN(result)) {\n            ans = result;\n        }\n        this.setState({\n            result,\n            userExpression,\n            openParens,\n            ans\n        })\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const resolveExpression = (userExpression, ans) => {\n    let result;\n    if (userExpression.length === 0) {\n        return 0;\n    }\n    userExpression = condenseFloats(userExpression);\n    userExpression = translateSymbols(userExpression, ans);\n    userExpression = implicitMultiplication(userExpression);\n    userExpression = userExpression.join(\"\");\n    try {\n        // eslint-disable-next-line\n        result = eval(userExpression);\n        if (result === undefined) {\n            result = NaN;\n        }\n    } catch(error) {\n        result = NaN;\n    }\n    return result;\n}\n\nconst condenseFloats = (userExpression) => {\n    let result = [];\n    let num = [];\n    for (let token of userExpression) {\n        if (Number.isInteger(token) || token === \".\") {\n            num.push(token);\n        } else {\n            if (num.length !== 0) {\n                result.push(Number.parseFloat(num.join(\"\")));\n                num = [];\n            }\n            result.push(token);\n        }\n    }\n    if (num.length !== 0) {\n        result.push(Number.parseFloat(num.join(\"\")));\n        num = [];\n    }\n    return result;\n}\n\nconst translateSymbols = (userExpression, ans) => {\n    for (let i=0; i < userExpression.length; i++) {\n        if (userExpression[i] === \" − \") {\n            userExpression[i] = \" - \";\n        } else if (userExpression[i] === \" × \") {\n            userExpression[i] = \" * \";\n        } else if (userExpression[i] === \" ÷ \") {\n            userExpression[i] = \" / \";\n        } else if (userExpression[i] === \"Ans\") {\n            userExpression[i] = ans;\n        }\n    }\n    return userExpression;\n}\n\nconst implicitMultiplication = (userExpression) => {\n    let result = [];\n    for (let i=0; i < userExpression.length; i++) {\n        result.push(userExpression[i]);\n        if ((!isNaN(userExpression[i]) || userExpression[i] === \")\" || userExpression[i] === \"Ans\") &&\n            (!isNaN(userExpression[i+1]) || userExpression[i+1] === \"(\" || userExpression[i+1] === \"Ans\")\n        ) {\n            result.push(\" * \");\n        }\n    }\n    return result;\n}\n\nexport {\n    resolveExpression\n};\n"],"sourceRoot":""}